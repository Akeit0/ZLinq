name: Benchmark
run-name: Benchmark(${{ inputs.config }})

on:
  workflow_dispatch:
    inputs:
      config:
        type: choice
        description: Specify benchmark config key
        default: Default
        options:
          - Default
          - Test
          - TargetFrameworks
          - NuGetVersions
          - SystemLinq
      filter:
        type: string
        description: Specify benchmark filter text (e,g. Benchmark.ReadMeBenchmark*)
        default: '*'
      framework:
        type: choice
        description: Specify target framework for benchmark
        default: net9.0
        options:
          - net9.0
          - net10.0

jobs:
  benchmark:
    permissions:
      contents: read
    runs-on: ubuntu-24.04
    timeout-minutes: 360 # Default: 360 minutes
    steps:
      - uses: Cysharp/Actions/.github/actions/checkout@main
      - uses: Cysharp/Actions/.github/actions/setup-dotnet@main

      - uses: Cysharp/Actions/.github/actions/setup-dotnet@main
        if: ${{ inputs.framework == 'net10.0' }}
        with:
          dotnet-version: 10.0.x

      - run: dotnet build -c Release

      - name: Run Benchmarks
        working-directory: sandbox/Benchmark
        run: dotnet run -c Release --framework ${{ inputs.framework }} --no-build --no-launch-profile -- --filter "${{ inputs.filter }}" -- ${{ inputs.config }}

      - name: Upload artifacts
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 #v4.6.1
        with:
          name: BenchmarkDotNet.Artifacts
          path: sandbox/Benchmark/BenchmarkDotNet.Artifacts/
          if-no-files-found: error

      - name: Output results to JobSummary
        working-directory: sandbox/Benchmark
        shell: pwsh
        run: |
          $items = Get-ChildItem "BenchmarkDotNet.Artifacts/results/*.md" | where Name -ne 'reports.md'
          foreach($item in $items) {
            $title = $item.Name
            $title = $title.Replace('-report-console.md', '')
            $title = $title.Replace('_Int32_' , '&lt;int&gt;')
            $title = $title.Replace('_String_', '&lt;string&gt;')
            $title = $title.Replace('_Double_', '&lt;double&gt;')

            $content = Get-Content $item.FullName -Raw
            $tableContent = $content.Substring($content.IndexOf('|'))                        
            $tableContent.Replace('<', '&lt;').Replace('>', '&gt;')

            Write-Output ('## {0}' -f $title)  >> $env:GITHUB_STEP_SUMMARY
            Write-Output $tableContent         >> $env:GITHUB_STEP_SUMMARY
          }
